<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于github-gitee搭建的hexo博客</title>
    <url>/2020/11/11/%E5%9F%BA%E4%BA%8Egithub-gitee%E6%90%AD%E5%BB%BA%E7%9A%84hexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>hexo blog搭建，并通过github和gitee进行托管</p>
<a id="more"></a>

<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h2><p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。</p>
<p><a href="https://docs.github.com/cn/free-pro-team@latest/github/working-with-github-pages/about-github-pages">Which is Github Pages? - Github Help </a></p>
<h2 id="Gitee-Pages"><a href="#Gitee-Pages" class="headerlink" title="Gitee Pages"></a>Gitee Pages</h2><p>Gitee Pages 是一个免费的静态网页托管服务，可以使用 Gitee Pages 托管博客、项目官网等静态网页。目前 Gitee Pages 支持 Jekyll、Hugo、Hexo编译静态资源。</p>
<p><a href="https://gitee.com/help/articles/4136#article-header0">Gitee Pages - Gitee 帮助中心</a></p>
<h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p>Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。</p>
<p><a href="https://hexo.io/zh-cn/">官网: hexo</a></p>
<h1 id="文章发布原理"><a href="#文章发布原理" class="headerlink" title="文章发布原理"></a>文章发布原理</h1><p>在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub/Gitee 上完成博文的发布。</p>
<p>![发布原理](/Users/jnxing/Library/Application Support/typora-user-images/image-20201111123423788.png)</p>
<img src="/Users/jnxing/Library/Application" class="" title="Support&#x2F;typora-user-images&#x2F;image-20201111123423788.png " alt="title text">



<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>安装hexo前需安装下列程序</p>
<ul>
<li>Node.js  版本需不低于 10.13，建议使用 Node.js 12.0 及以上</li>
<li>Git</li>
</ul>
<p>Hexo基于node.js，当前环境中需安装node.js。</p>
<p>安装Node.js会包含环境变量及npm的安装。</p>
<p>前往<a href="https://nodejs.org/en/">官网</a>下载安装。</p>
<p>安装后，输入以下命令检测是否安装成功。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>国内建议使用淘宝镜像源，安装cnpm</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo su</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"><span class="meta">#</span><span class="bash">检查cnpm是否正确安装</span></span><br><span class="line">cnpm -v</span><br></pre></td></tr></table></figure>

<ul>
<li>Hexo</li>
</ul>
<p>npm安装较慢，建议选择cnpm</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用npm安装hexo</span></span><br><span class="line">sudo npm install -g hexo-cli</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用cnpm安装hexo</span></span><br><span class="line">sudo cnpm install -g hexo-cli</span><br><span class="line"><span class="meta">#</span><span class="bash"> 检测hexo环境是否成功安装</span></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<h1 id="Hexo-Blog创建"><a href="#Hexo-Blog创建" class="headerlink" title="Hexo Blog创建"></a>Hexo Blog创建</h1><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 初始化</span></span><br><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装组件,或者使用cnpm</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>启动本地服务及预览</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 新建hexo blog</span></span><br><span class="line">hexo n &quot;myblog&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成页面</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta">#</span><span class="bash"> 本地预览</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>本地访问地址:  <a href="http://localhost:4000/">http://localhost:4000</a></p>
<h1 id="Hexo部署至Github-Gitee"><a href="#Hexo部署至Github-Gitee" class="headerlink" title="Hexo部署至Github/Gitee"></a>Hexo部署至Github/Gitee</h1><h2 id="Git最小化配置"><a href="#Git最小化配置" class="headerlink" title="Git最小化配置"></a>Git最小化配置</h2><p>设置全局配置， name及email参数需与Github,Gitee注册信息相同。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &#x27;jumbo-188&#x27;</span><br><span class="line">git config --global user.email &#x27;xingjingnan@aliyun.com&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看配置</span></span><br><span class="line">git config --global --list</span><br></pre></td></tr></table></figure>

<h2 id="Github配置"><a href="#Github配置" class="headerlink" title="Github配置"></a>Github配置</h2><ol>
<li>创建仓库，仓库名称为Github账户名称+’.github.io’  : <code>jumbo-188.github.io</code></li>
<li>勾选<code>Add a README file</code>会默认帮你开通GitHub Pages服务。</li>
<li>进入仓库，修改默认分支为<code>master</code></li>
</ol>
<h2 id="Gitee配置"><a href="#Gitee配置" class="headerlink" title="Gitee配置"></a>Gitee配置</h2><ol>
<li>新建仓库，仓库名称同Gitee账户名称。<code>jumbo-188</code></li>
<li>进入仓库，服务开通Gitee Pages。</li>
</ol>
<h2 id="SSH服务"><a href="#SSH服务" class="headerlink" title="SSH服务"></a>SSH服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 生成Gitee SSH-Key</span></span><br><span class="line">ssh-keygen -t rsa -C &#x27;xingjingnan@aliyun.com&#x27; -f ~/.ssh/gitee_id_rsa</span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成GitHub SSH-Key</span></span><br><span class="line">ssh-keygen -t rsa -C &#x27;xingjingnan@aliyun.com&#x27; -f ~/.ssh/github_id_rsa</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ~/.ssh/路径下新建config文件</span></span><br><span class="line">cd ~/.ssh</span><br><span class="line">touch config</span><br></pre></td></tr></table></figure>

<p><code>config</code>文件添加如下内容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> gitee</span></span><br><span class="line">Host gitee.com</span><br><span class="line">HostName gitee.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/gitee_id_rsa</span><br><span class="line"><span class="meta">#</span><span class="bash"> github</span></span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/github_id_rsa</span><br></pre></td></tr></table></figure>

<p>将生成的<code>gitee_id_rsa.pub</code>,<code>github_id_rsa.pub</code>内容分别添加至Gitee及Github中。</p>
<p>测试SSH链接是否可用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<h2 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h2><p>安装git部署插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>修改<code>_config.yml</code>文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">      gitee: git@gitee.com:jumbo-188/jumbo-188.git</span><br><span class="line">      github: git@github.com:jumbo-188/jumbo-188.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>重新生成并部署</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 清空缓存</span></span><br><span class="line">hexo clean </span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta">#</span><span class="bash"> 部署至Github,Gitee</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h1 id="登录blog"><a href="#登录blog" class="headerlink" title="登录blog"></a>登录blog</h1><ul>
<li>Gitee.io</li>
</ul>
<p>Gitee Pages服务无法自动刷新，需登录Gitee仓库，手动更新Gitee Pages。</p>
<p> <a href="https://jumbo-188.gitee.io/">https://jumbo-188.gitee.io</a></p>
<ul>
<li>Github.io</li>
</ul>
<p>Github Pages会自动刷新，浏览器打开即可。</p>
<p><a href="https://jumbo-188.github.io/">https://jumbo-188.github.io</a></p>
<h1 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h1><h2 id="1-hexo-init-卡顿解决办法"><a href="#1-hexo-init-卡顿解决办法" class="headerlink" title="1. hexo init 卡顿解决办法"></a>1. hexo init 卡顿解决办法</h2><p><a href="https://weilining.github.io/201021.html">参考文章</a> 再此基础上修改，可稳定快速初始化hexo。</p>
<p>原命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/hexojs/hexo-cli/blob/master/lib/console/init.js">hexo init 源码</a></p>
<p>源码解析</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/hexojs/hexo-starter.git blog</span><br><span class="line">cd blog</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure>

<p>更换为Gitee</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/jumbo-188/hexo-starter.git blog</span><br><span class="line">cd blog</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br><span class="line">npm config set registry http://registry.npm.taobao.org</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure>

<p>若执行<code>git submodule update</code>很慢，考虑更换git 配置。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看当前git config</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">git config --list --<span class="built_in">local</span></span></span><br><span class="line">core.repositoryformatversion=0</span><br><span class="line">core.filemode=true</span><br><span class="line">core.bare=false</span><br><span class="line">core.logallrefupdates=true</span><br><span class="line">core.ignorecase=true</span><br><span class="line">core.precomposeunicode=true</span><br><span class="line">remote.origin.url=https://gitee.com/jumbo-188/hexo-starter.git</span><br><span class="line">remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*</span><br><span class="line">branch.master.remote=origin</span><br><span class="line">branch.master.merge=refs/heads/master</span><br><span class="line">submodule.themes/landscape.active=true</span><br><span class="line">submodule.themes/landscape.url=https://github.com/hexojs/hexo-theme-landscape.git</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 更换为gitee源</span></span><br><span class="line">git config --local submodule.themes/landscape.url https://gitee.com/jumbo-188/hexo-theme-landscape.git</span><br><span class="line"><span class="meta">#</span><span class="bash"> 确认submodule.themes/landscape.url替换成功</span></span><br><span class="line">git config --list --local</span><br></pre></td></tr></table></figure>

<p>接着执行npm安装即可。</p>
<h2 id="2-GitHub-io没有刷新"><a href="#2-GitHub-io没有刷新" class="headerlink" title="2. GitHub.io没有刷新"></a>2. GitHub.io没有刷新</h2><p><code>hexo d</code>命令后，gitee及github均部署成功。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">Counting objects: 46, done.</span><br><span class="line">Delta compression using up to 4 threads.</span><br><span class="line">Compressing objects: 100% (36/36), done.</span><br><span class="line">Writing objects: 100% (46/46), 507.62 KiB | 607.00 KiB/s, done.</span><br><span class="line">Total 46 (delta 4), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (4/4), done.</span><br><span class="line">To github.com:jumbo-188/jumbo-188.github.io.git</span><br><span class="line"> + d0b16e9...080c6d7 HEAD -&gt; master (forced update)</span><br><span class="line">Branch &#x27;master&#x27; set up to track remote branch &#x27;master&#x27; from &#x27;git@github.com:jumbo-188/jumbo-188.github.io.git&#x27;.</span><br><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure>

<p>此时回到github仓库中，设置默认分支为<code>master</code>, 设置GitHub Pages 部署分支为<code>master</code>。 </p>
<p>仓库settings设置</p>
<p>![image-20201111210818883](/Users/jnxing/Library/Application Support/typora-user-images/image-20201111210818883.png)</p>
<p>branches设置</p>
<p>![image-20201111211014606](/Users/jnxing/Library/Application Support/typora-user-images/image-20201111211014606.png)</p>
<p>刷新github博客地址即可。</p>
]]></content>
  </entry>
  <entry>
    <title>css基础教程</title>
    <url>/2020/11/17/css%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>CSS基础知识介绍</p>
<a id="more"></a>

<h1 id="CSS定义及优点"><a href="#CSS定义及优点" class="headerlink" title="CSS定义及优点"></a>CSS定义及优点</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li>CSS 指层叠样式表 (<em>C</em>ascading <em>S</em>tyle <em>S</em>heets)</li>
<li>样式定义<strong>如何显示</strong> HTML 元素</li>
<li>样式通常存储在<strong>样式表</strong>中</li>
<li>把样式添加到 HTML 4.0 中，是为了<strong>解决内容与表现分离的问题</strong></li>
<li><strong>外部样式表</strong>可以极大提高工作效率</li>
<li>外部样式表通常存储在 <strong>CSS 文件</strong>中</li>
<li>多个样式定义可<strong>层叠</strong>为一个</li>
</ul>
<h2 id="CSS解决的问题"><a href="#CSS解决的问题" class="headerlink" title="CSS解决的问题"></a>CSS解决的问题</h2><p>HTML 标签原本被设计为用于定义文档内容。通过使用 <code>&lt;h1&gt;、&lt;p&gt;、&lt;table&gt;</code> 这样的标签，HTML 的初衷是表达“这是标题”、“这是段落”、“这是表格”之类的信息。同时文档布局由浏览器来完成，而不使用任何的格式化标签。</p>
<p>由于两种主要的浏览器（Netscape 和 Internet Explorer）不断地将新的 HTML 标签和属性（比如字体标签和颜色属性）添加到 HTML 规范中，创建文档内容清晰地独立于文档表现层的站点变得越来越困难。</p>
<p>为了解决这个问题，万维网联盟（W3C），这个非营利的标准化联盟，肩负起了 HTML 标准化的使命，并在 HTML 4.0 之外创造出样式（Style）。</p>
<p>所有的主流浏览器均支持层叠样式表。</p>
<h2 id="CSS带来的好处"><a href="#CSS带来的好处" class="headerlink" title="CSS带来的好处"></a>CSS带来的好处</h2><p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p>
<p>由于允许同时控制多重页面的样式和布局，CSS 可以称得上 WEB 设计领域的一个突破。作为网站开发者，你能够为每个 HTML 元素定义样式，并将之应用于你希望的任意多的页面中。如需进行全局的更新，只需简单地改变样式，然后网站中的所有元素均会自动地更新。</p>
<h2 id="多重层叠"><a href="#多重层叠" class="headerlink" title="多重层叠"></a>多重层叠</h2><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p>
<h3 id="层叠次序"><a href="#层叠次序" class="headerlink" title="层叠次序"></a>层叠次序</h3><p><strong>当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？</strong></p>
<p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p>
<ol>
<li>浏览器缺省设置</li>
<li>外部样式表</li>
<li>内部样式表（位于 <code>&lt;head&gt;</code> 标签内部）</li>
<li>内联样式（在 HTML 元素内部）</li>
</ol>
<p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权.</p>
]]></content>
  </entry>
  <entry>
    <title>HTML基础教程</title>
    <url>/2020/11/14/HTML%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>HTML基础教程介绍</p>
<a id="more"></a>

<h1 id="HTML基础概念"><a href="#HTML基础概念" class="headerlink" title="HTML基础概念"></a>HTML基础概念</h1><p>HTML是用来描述网页的一种语言</p>
<ul>
<li>HTML指的是超文本标记语言(Hyper Text Markup Language)</li>
<li>HTML不是一种编程语言，而是一种<strong>标记语言</strong>(markup language)</li>
<li>标记语言是一套<strong>标记标签</strong>(markup tag)</li>
<li>HTML使用<strong>标记标签</strong>来描述网页</li>
</ul>
<h2 id="HTML标记标签"><a href="#HTML标记标签" class="headerlink" title="HTML标记标签"></a>HTML标记标签</h2><p>HTML 标记标签通常被称为 HTML 标签 (HTML tag)。</p>
<ul>
<li>HTML 标签是由<strong>尖括号</strong>包围的关键词，比如 <code>&lt;html&gt;</code></li>
<li>HTML 标签通常是<strong>成对出现</strong>的，比如 <code>&lt;b&gt;</code> 和 <code>&lt;/b&gt;</code></li>
<li>标签对中的第一个标签是<strong>开始标签</strong>，第二个标签是<strong>结束标签</strong></li>
<li>开始和结束标签也被称为<strong>开放标签</strong>和<strong>闭合标签</strong></li>
</ul>
<h2 id="HTML文档和网页"><a href="#HTML文档和网页" class="headerlink" title="HTML文档和网页"></a>HTML文档和网页</h2><ul>
<li>HTML文档描述网页</li>
<li>HTML文档包含HTML标签和纯文本</li>
<li>HTML文档也被称为网页</li>
</ul>
<p>Web浏览器的作用是读取HTML文档，并以网页的形式显示出他们。浏览器不会显示 HTML 标签，而是使用标签来解释页面的内容：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>&lt;html&gt;</code> 与<code>&lt;/html&gt;</code>之间的文本描述网页</li>
<li><code>&lt;body&gt; </code>与<code> &lt;/body&gt;</code> 之间的文本是可见的页面内容</li>
<li><code>&lt;h1&gt;</code> 与 <code>&lt;/h1&gt;</code> 之间的文本被显示为标题(Heading)</li>
<li><code>&lt;p&gt;</code> 与 <code>&lt;/p&gt;</code> 之间的文本被显示为段落</li>
</ul>
<h1 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h1><h2 id="HTML标题"><a href="#HTML标题" class="headerlink" title="HTML标题"></a>HTML标题</h2><p>HTML 标题（Heading）是通过 <code>&lt;h1&gt; - &lt;h6&gt; </code>等标签进行定义的。</p>
<p><code>&lt;h1&gt;</code> 定义最大的标题。<code>&lt;h6&gt;</code> 定义最小的标题。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注释：</strong></p>
<ul>
<li>浏览器会自动地在标题的前后添加空行。</li>
<li>默认情况下，HTML 会自动地在块级元素前后添加一个额外的空行，比如段落、标题元素前后。</li>
</ul>
<p>请确保将 HTML heading 标签只用于标题。不要仅仅是为了产生粗体或大号的文本而使用标题</p>
<p>搜索引擎使用标题为您的网页的结构和内容编制索引。因为用户可以通过标题来快速浏览您的网页，所以用标题来呈现文档结构是很重要的。</p>
<h2 id="HTML段落"><a href="#HTML段落" class="headerlink" title="HTML段落"></a>HTML段落</h2><p>HTML 段落是通过 <code>&lt;p&gt;</code> 标签进行定义的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is another paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="HTML链接"><a href="#HTML链接" class="headerlink" title="HTML链接"></a>HTML链接</h2><p>HTML 链接是通过 <code>&lt;a&gt;</code> 标签进行定义的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://jumbo-188.github.io&quot;</span>&gt;</span>This is a link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>href属性中指定链接的地址。</p>
<h2 id="HTML水平线"><a href="#HTML水平线" class="headerlink" title="HTML水平线"></a>HTML水平线</h2><p><code>&lt;hr /&gt;</code> 标签在 HTML 页面中创建水平线。</p>
<p>hr 元素可用于分隔内容。</p>
<h2 id="HTML注释"><a href="#HTML注释" class="headerlink" title="HTML注释"></a>HTML注释</h2><p>可以将注释插入 HTML 代码中，这样可以提高其可读性，使代码更易被人理解。浏览器会忽略注释，也不会显示它们。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- This is a comment --&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="HTML段落-1"><a href="#HTML段落-1" class="headerlink" title="HTML段落"></a>HTML段落</h2><p>可以把 HTML 文档分割为若干段落。</p>
<p>段落是通过 <code>&lt;p&gt;</code> 标签定义的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is another paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>浏览器会自动地在段落的前后添加空行。（<code>&lt;p&gt;</code> 是块级元素）</p>
<p>如果您希望在不产生一个新段落的情况下进行换行（新行），请使用 <code>&lt;br /&gt;</code> 标签：</p>
<p><code>&lt;br /&gt;</code> 元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签。</p>
<h1 id="HTML元素"><a href="#HTML元素" class="headerlink" title="HTML元素"></a>HTML元素</h1><p>HTML 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。</p>
<table>
<thead>
<tr>
<th align="left">开始标签</th>
<th align="left">元素内容</th>
<th align="left">结束标签</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;p&gt;</code></td>
<td align="left">This is a paragraph</td>
<td align="left"><code>&lt;/p&gt;</code></td>
</tr>
<tr>
<td align="left"><code>&lt;a href=&quot;default.htm&quot; &gt;</code></td>
<td align="left">This is a link</td>
<td align="left"><code>&lt;/a&gt;</code></td>
</tr>
<tr>
<td align="left"><code>&lt;br /&gt;</code></td>
<td align="left"></td>
<td align="left"></td>
</tr>
</tbody></table>
<p>HTML元素语法</p>
<ul>
<li>HTML 元素以<strong>开始标签</strong>起始</li>
<li>HTML 元素以<strong>结束标签</strong>终止</li>
<li><strong>元素的内容</strong>是开始标签与结束标签之间的内容(==闭区间==)</li>
<li>某些 HTML 元素具有<strong>空内容（empty content）</strong></li>
<li>空元素<strong>在开始标签中进行关闭</strong>（以开始标签的结束而结束）</li>
<li>大多数 HTML 元素可拥有<strong>属性</strong></li>
<li>HTML元素支持嵌套</li>
</ul>
<h2 id="HTML实例解释"><a href="#HTML实例解释" class="headerlink" title="HTML实例解释"></a>HTML实例解释</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is my first paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>上面的例子包含三个HTML元素</p>
<ul>
<li><code>&lt;p&gt;</code>元素</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is my first paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这个 <code>&lt;p&gt;</code> 元素定义了 HTML 文档中的一个段落。</p>
<p>这个元素拥有一个开始标签<code> &lt;p&gt;</code>，以及一个结束标签 <code>&lt;/p&gt;</code>。</p>
<p>元素内容是：This is my first paragraph。</p>
<ul>
<li><code>&lt;body&gt;</code> 元素：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;This is my first paragraph.&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>

<p><code>&lt;body&gt;</code> 元素定义了 HTML 文档的主体。</p>
<p>这个元素拥有一个开始标签 <code>&lt;body&gt;</code>，以及一个结束标签 <code>&lt;/body&gt;</code>。</p>
<p>元素内容是另一个 HTML 元素（p 元素）。</p>
<ul>
<li><code>&lt;html&gt;</code> 元素：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;This is my first paragraph.&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p><code>&lt;html&gt;</code> 元素定义了整个 HTML 文档。</p>
<p>这个元素拥有一个开始标签 <code>&lt;html&gt;</code>，以及一个结束标签 <code>&lt;/html&gt;</code>。</p>
<p>元素内容是另一个 HTML 元素（body 元素）。</p>
<h2 id="空HTML元素"><a href="#空HTML元素" class="headerlink" title="空HTML元素"></a>空HTML元素</h2><p>没有内容的 HTML 元素被称为空元素。</p>
<p>空元素是在开始标签中关闭的。</p>
<p><code>&lt;br&gt;</code> 就是没有关闭标签的空元素（<code>&lt;br&gt;</code>标签定义换行）。</p>
<p>在 XHTML、XML 以及未来版本的 HTML 中，所有元素都必须被关闭。</p>
<p>==在开始标签中添加斜杠，比如 <code>&lt;br /&gt;</code>，是关闭空元素的正确方法==，HTML、XHTML 和 XML 都接受这种方式。</p>
<p>即使 <code>&lt;br&gt;</code> 在所有浏览器中都是有效的，但使用 <code>&lt;br /&gt;</code> 其实是更长远的保障。</p>
<h1 id="HTML属性"><a href="#HTML属性" class="headerlink" title="HTML属性"></a>HTML属性</h1><p>属性为 HTML 元素提供附加信息。</p>
<p>HTML 标签可以拥有<strong>属性</strong>。属性提供了有关 HTML 元素的<em>更多的信息</em>。</p>
<p>属性总是以名称/值对的形式出现，比如：<code>name=&quot;value&quot;</code>。</p>
<p>属性总是在 HTML 元素的<strong>开始标签</strong>中规定。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.w3school.com.cn&quot;</span>&gt;</span>This is a link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>属性和属性值对大小写<strong>不敏感</strong>。</p>
<p>属性值应该始终被包括在引号内。双引号是最常用的，不过使用单引号也没有问题。</p>
<p>下面列出了适用于大多数 HTML 元素的属性：</p>
<table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">class</td>
<td align="left"><em>classname</em></td>
<td align="left">规定元素的类名（classname）</td>
</tr>
<tr>
<td align="left">id</td>
<td align="left"><em>id</em></td>
<td align="left">规定元素的唯一 id</td>
</tr>
<tr>
<td align="left">style</td>
<td align="left"><em>style_definition</em></td>
<td align="left">规定元素的行内样式（inline style）</td>
</tr>
<tr>
<td align="left">title</td>
<td align="left"><em>text</em></td>
<td align="left">规定元素的额外信息（可在工具提示中显示）</td>
</tr>
<tr>
<td align="left">lang</td>
<td align="left"><em>lang</em></td>
<td align="left">规定元素内容的语言</td>
</tr>
</tbody></table>
<h1 id="HTML样式"><a href="#HTML样式" class="headerlink" title="HTML样式"></a>HTML样式</h1><p>style 属性用于改变 HTML 元素的样式。</p>
<p>style 属性的作用：</p>
<p><strong>提供了一种改变所有 HTML 元素的样式的通用方法。</strong></p>
<p>样式是 HTML 4 引入的，它是一种新的首选的改变 HTML 元素样式的方式。通过 HTML 样式，能够通过使用 style 属性直接将样式添加到 HTML 元素，或者间接地在独立的样式表中（CSS 文件）进行定义。</p>
<blockquote>
<p>style是元素的属性，backgroud-color，font-size是style的属性。</p>
</blockquote>
<p>background-color 属性为元素定义了背景颜色：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;background-color:yellow&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;background-color:red&quot;</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;background-color:green&quot;</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>style 属性淘汰了“旧的” bgcolor 属性。</p>
</blockquote>
<p>font-family、color 以及 font-size 属性分别定义元素中文本的字体系列、颜色和字体尺寸：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;font-family:verdana&quot;</span>&gt;</span>A heading<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;font-family:arial;color:red;font-size:20px;&quot;</span>&gt;</span>A paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>style 属性淘汰了旧的 <font> 标签。</p>
</blockquote>
<p>text-align 属性规定了元素中文本的水平对齐方式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The heading above is aligned to the center of this page.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>style 属性淘汰了旧的 “align” 属性。</p>
</blockquote>
<h1 id="HTML样式表-CSS"><a href="#HTML样式表-CSS" class="headerlink" title="HTML样式表(CSS)"></a>HTML样式表(CSS)</h1><p>当浏览器读到一个样式表，它就会按照这个样式表来对文档进行格式化。有以下三种方式来插入样式表：</p>
<h2 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h2><p>当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。</p>
<p>使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;mystyle.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<ol>
<li>在 HTML 中，<code>&lt;link&gt;</code> 标签没有结束标签。<code>&lt;link&gt;</code>元素为空元素</li>
<li><code>&lt;link&gt;</code>元素仅能位于head部分。</li>
</ol>
</blockquote>
<p><code>&lt;link&gt;</code>元素常用属性：</p>
<table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">href</td>
<td align="left"><em>URL</em></td>
<td align="left">规定被链接文档的位置。</td>
</tr>
<tr>
<td align="left">hreflang</td>
<td align="left"><em>language_code</em></td>
<td align="left">规定被链接文档中文本的语言。</td>
</tr>
<tr>
<td align="left">rel</td>
<td align="left">alternate<br />author<br />help<br />icon<br />licence<br />next<br />pingback<br />prefetch<br />prev<br />search<br />sidebar<br />stylesheet<br />tag</td>
<td align="left">规定当前文档与被链接文档之间的关系。</td>
</tr>
<tr>
<td align="left">type</td>
<td align="left"><em>MIME_type</em></td>
<td align="left">规定被链接文档的 MIME 类型</td>
</tr>
</tbody></table>
<h2 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h2><p>当单个文件需要特别样式时，就可以使用内部样式表。你可以在 head 部分通过 <code>&lt;style&gt;</code> 标签定义内部样式表。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>: red&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">margin-left</span>: <span class="number">20px</span>&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>&lt;style&gt;</code> 标签用于为 HTML 文档定义样式信息。</p>
<p>在 style 中，您可以规定在浏览器中如何呈现 HTML 文档。</p>
<p>type 属性是必需的，定义 style 元素的内容。唯一可能的值是 “text/css”。</p>
<p>style 元素位于 head 部分中。</p>
<table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">type</td>
<td align="left">text/css</td>
<td align="left">规定样式表的 MIME 类型。</td>
</tr>
<tr>
<td align="left">media</td>
<td align="left">screen<br />tty<br />tv<br />projection<br />handheld<br />print<br />braille<br />aural<br />all</td>
<td align="left">为样式表规定不同的媒介类型。</td>
</tr>
</tbody></table>
<h2 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h2><p>当特殊的样式需要应用到个别元素时，就可以使用内联样式。</p>
<p> 使用内联样式的方法是在相关的标签中使用样式属性。</p>
<p>样式属性可以包含任何 CSS 属性。</p>
<p>以下实例显示出如何改变段落的颜色和左外边距。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red; margin-left: 20px&quot;</span>&gt;</span></span><br><span class="line">This is a paragraph</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>内联样式即为上一节中HTML样式</p>
<p>此时style为属性。</p>
</blockquote>
<h1 id="HTML链接-1"><a href="#HTML链接-1" class="headerlink" title="HTML链接"></a>HTML链接</h1><p><strong>HTML 使用超级链接与网络上的另一个文档相连。</strong></p>
<p><strong>几乎可以在所有的网页中找到链接。点击链接可以从一张页面跳转到另一张页面。</strong></p>
<p>超链接可以是一个字，一个词，或者一组词，也可以是一幅图像，您可以点击这些内容来跳转到新的文档或者当前文档中的某个部分。</p>
<p>当把鼠标指针移动到网页中的某个链接上时，箭头会变为一只小手。</p>
<p>我们通过使用 <code>&lt;a&gt; </code>标签在 HTML 中创建链接。</p>
<p>有两种使用 <code>&lt;a&gt;</code> 标签的方式：</p>
<ol>
<li>通过使用 href 属性 - 创建指向另一个文档的链接</li>
<li>通过使用 name 属性 - 创建文档内的书签</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://jumbo-188.github.io&quot;</span>&gt;</span>jumbo&#x27;s blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="target属性"><a href="#target属性" class="headerlink" title="target属性"></a>target属性</h2><p>使用 Target 属性，你可以定义被链接的文档在何处显示。</p>
<p>下面的这行会在新窗口打开文档：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://jumbo-188.github.io&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>jumbo&#x27;s blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="name属性"><a href="#name属性" class="headerlink" title="name属性"></a>name属性</h2><p>name 属性规定锚（anchor）的名称。</p>
<p><strong>使用 name 属性创建 HTML 页面中的书签</strong>。</p>
<p>书签不会以任何特殊方式显示，它对读者是<strong>不可见的</strong>。</p>
<p>当使用命名锚（named anchors）时，我们可以创建直接跳至该命名锚（比如页面中某个小节）的链接，这样使用者就无需不停地滚动页面来寻找他们需要的信息了。</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;label&quot;</span>&gt;</span>锚（显示在页面上的文本）<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>锚的名称可以是任何你喜欢的名字。</p>
<p><strong>提示：</strong>可以使用 id 属性来替代 name 属性，命名锚同样有效。</p>
<p>用法示例：</p>
<ol>
<li>在HTML文档中对锚进行命名(创建一个书签):</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;tips&quot;</span>&gt;</span>提示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>可以在统一文档中创建指向该锚的链接</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#tips&quot;</span>&gt;</span>点击链接跳转到提示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>也可以在其他页面创建指向该锚的链接</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.w3school.com.cn/html/html_links.asp#tips&quot;</span>&gt;</span>点击链接跳转到提示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>假如浏览器找不到已定义的命名锚，那么就会定位到文档的顶端。不会有错误发生。</p>
</blockquote>
<h1 id="HTML图像"><a href="#HTML图像" class="headerlink" title="HTML图像"></a>HTML图像</h1><p>通过HTML，在文档中显示图像</p>
<h2 id="img标签"><a href="#img标签" class="headerlink" title="img标签"></a>img标签</h2><p>在 HTML 中，图像由 <code>&lt;img&gt;</code> 标签定义。</p>
<p><code>&lt;img&gt;</code> 是空标签，意思是说，它只包含属性，并且没有闭合标签。</p>
<p>要在页面上显示图像，你需要使用源属性（src）。src 指 “source”。源属性的值是图像的 URL 地址。</p>
<p>定义图像的语法是：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;url&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>URL 指存储图像的位置。</p>
<p>本地图片示例</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;file:///Users/jnxing/Desktop/WechatIMG21.jpeg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;128&quot;</span> <span class="attr">height</span>=<span class="string">&quot;128&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>



<p>浏览器将图像显示在文档中图像标签出现的地方。如果你将图像标签置于两个段落之间，那么浏览器会首先显示第一个段落，然后显示图片，最后显示第二段。</p>
<hr>
<p>alt 属性用来为图像定义一串预备的可替换的文本。替换文本属性的值是用户定义的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/i/eg_goleft123.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;向左转&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>在浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息。此时，浏览器将显示这个替代性的文本而不是图像。为页面上的图像都加上替换文本属性是个好习惯，这样有助于更好的显示信息，并且对于那些使用纯文本浏览器的人来说是非常有用的。</p>
<h1 id="HTML表格"><a href="#HTML表格" class="headerlink" title="HTML表格"></a>HTML表格</h1><p>表格由 <code>&lt;table&gt;</code> 标签来定义。每个表格均有若干行（由 <code>&lt;tr&gt;</code> 标签定义），每行被分割为若干单元格（由<code> &lt;td&gt;</code> 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在浏览器显示如下：</p>
<table>
<thead>
<tr>
<th>row 1, cell 1</th>
<th>row 1, cell 2</th>
</tr>
</thead>
<tbody><tr>
<td>row 2, cell 1</td>
<td>row 2, cell 2</td>
</tr>
</tbody></table>
<h2 id="边框属性"><a href="#边框属性" class="headerlink" title="边框属性"></a>边框属性</h2><p>如果不定义边框属性，表格将不显示边框。有时这很有用，但是大多数时候，我们希望显示边框。</p>
<p>使用边框属性来显示一个带有边框的表格：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="表头"><a href="#表头" class="headerlink" title="表头"></a>表头</h2><p>表格的表头使用 <th> 标签进行定义。</p>
<p>大多数浏览器会把表头显示为粗体居中的文本：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Another Heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在浏览器显示如下：</p>
<table>
<thead>
<tr>
<th>Heading</th>
<th>Another Heading</th>
</tr>
</thead>
<tbody><tr>
<td>row 1, cell 1</td>
<td>row 1, cell 2</td>
</tr>
<tr>
<td>row 2, cell 1</td>
<td>row 2, cell 2</td>
</tr>
</tbody></table>
<h2 id="空单元格"><a href="#空单元格" class="headerlink" title="空单元格"></a>空单元格</h2><p>在一些浏览器中，没有内容的表格单元显示得不太好。如果某个单元格是空的（没有内容），浏览器可能无法显示出这个单元格的边框。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>浏览器可能会这样显示：</p>
<p><img src="https://www.w3school.com.cn/i/table_td_empty.gif" alt="表格中的空单元格"></p>
<p><strong>注意：</strong>这个空的单元格的边框没有被显示出来。为了避免这种情况，在空单元格中添加一个空格占位符，就可以将边框显示出来。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在浏览器中显示如下：</p>
<table>
<thead>
<tr>
<th>row 1, cell 1</th>
<th>row 1, cell 2</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>row 2, cell 2</td>
</tr>
</tbody></table>
<h1 id="HTML列表"><a href="#HTML列表" class="headerlink" title="HTML列表"></a>HTML列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。</p>
<p>无序列表始于 <code>&lt;ul&gt;</code> 标签。每个列表项始于 <code>&lt;li&gt;</code>。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>浏览器显示如下：</p>
<ul>
<li>Coffee</li>
<li>Milk</li>
</ul>
<p>列表项内部可以使用段落、换行符、图片、链接以及其他列表等等。</p>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>同样，有序列表也是一列项目，列表项目使用数字进行标记。</p>
<p>有序列表始于 <code>&lt;ol&gt;</code> 标签。每个列表项始于 <code>&lt;li&gt;</code> 标签。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>浏览器显示如下：</p>
<ol>
<li>Coffee</li>
<li>Milk</li>
</ol>
<p>列表项内部可以使用段落、换行符、图片、链接以及其他列表等等。</p>
<h2 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h2><p>自定义列表不仅仅是一列项目，而是项目及其注释的组合。</p>
<p>自定义列表以 <code>&lt;dl&gt;</code> 标签开始。每个自定义列表项以 <code>&lt;dt&gt; </code>开始。每个自定义列表项的定义以 <code>&lt;dd&gt;</code> 开始。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>Black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>White cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>浏览器显示如下：</p>
<ul>
<li><p>Coffee</p>
<p>Black hot drink</p>
</li>
<li><p>Milk</p>
<p>White cold drink</p>
</li>
</ul>
<p>定义列表的列表项内部可以使用段落、换行符、图片、链接以及其他列表等等。</p>
<h1 id="HTML块"><a href="#HTML块" class="headerlink" title="HTML块"></a>HTML块</h1><h2 id="块元素和内联元素"><a href="#块元素和内联元素" class="headerlink" title="块元素和内联元素"></a>块元素和内联元素</h2><p>大多数 HTML 元素被定义为块级元素或内联元素。</p>
<blockquote>
<p>块级元素：block level element</p>
<p>内联元素：inline element</p>
</blockquote>
<p>块级元素在浏览器显示时，通常会以新行来开始（和结束）。</p>
<p>例子：<code>&lt;h1&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;table&gt;</code></p>
<p>内联元素在显示时通常不会以新行开始。</p>
<p>例子: <code>&lt;b&gt;, &lt;td&gt;, &lt;a&gt;, &lt;img&gt;</code></p>
<h2 id="div"><a href="#div" class="headerlink" title="div"></a>div</h2><p>HTML <code>&lt;div&gt;</code> 元素是块级元素，它是可用于组合其他 HTML 元素的容器。</p>
<p><code>&lt;div&gt;</code> 元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。</p>
<p><code>&lt;div&gt;</code>可定义文档中的分区或节（division/section）。</p>
<p><code>&lt;div&gt;</code> 标签可以把文档分割为独立的、不同的部分。它可以用作严格的组织工具，并且不使用任何格式与其关联。</p>
<p>如果用 id 或 class 来标记 <code>&lt;div&gt;</code>，那么该标签的作用会变得更加有效。</p>
<p>如果与 CSS 一同使用，<code>&lt;div&gt;</code> 元素可用于对大的内容块设置样式属性。</p>
<p><code>&lt;div&gt;</code> 元素的另一个常见的用途是文档布局。它取代了使用表格定义布局的老式方法。使用 <code>&lt;table&gt;</code> 元素进行文档布局不是表格的正确用法。<code>&lt;table&gt;</code> 元素的作用是显示表格化的数据。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>This is a header<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color:#00FF00&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>This is a header<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="span"><a href="#span" class="headerlink" title="span"></a>span</h2><p>HTML <code>&lt;span&gt;</code> 元素是内联元素，可用作文本的容器。</p>
<p><code>&lt;span&gt;</code> 元素也没有特定的含义。</p>
<p>当与 CSS 一同使用时，<code>&lt;span&gt; </code>元素可用于为部分文本设置样式属性。</p>
<h1 id="HTML类"><a href="#HTML类" class="headerlink" title="HTML类"></a>HTML类</h1><p>对 HTML 进行分类（设置类），使我们能够为元素的类定义 CSS 样式。</p>
<p>为相同的类设置相同的样式，或者为不同的类设置不同的样式。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.cities</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">margin</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">&#125;	</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cities&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>London<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Standing on the River Thames, London has been a major settlement for two millennia, its history going back to its founding by the Romans, who named it Londinium.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="分类块级元素"><a href="#分类块级元素" class="headerlink" title="分类块级元素"></a>分类块级元素</h2><p>HTML <code>&lt;div&gt;</code> 元素是<em>块级元素</em>。它能够用作其他 HTML 元素的容器。</p>
<p>设置 <code>&lt;div&gt;</code> 元素的类，使我们能够为相同的 <code>&lt;div&gt;</code> 元素设置相同的类：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.cities</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">margin</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cities&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>London<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>London is the capital city of England. </span><br><span class="line">It is the most populous city in the United Kingdom, </span><br><span class="line">with a metropolitan area of over 13 million inhabitants.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cities&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Paris<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Paris is the capital and most populous city of France.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cities&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Tokyo<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Tokyo is the capital of Japan, the center of the Greater Tokyo Area,</span><br><span class="line">and the most populous metropolitan area in the world.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="分类内联元素"><a href="#分类内联元素" class="headerlink" title="分类内联元素"></a>分类内联元素</h2><p>HTML <code>&lt;span&gt;</code> 元素是内联元素，能够用作文本的容器。</p>
<p>设置 <code>&lt;span&gt;</code> 元素的类，能够为相同的 <code>&lt;span&gt;</code> 元素设置相同的样式。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">span</span><span class="selector-class">.red</span> &#123;<span class="attribute">color</span>:red;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>My <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>Important<span class="tag">&lt;/<span class="name">span</span>&gt;</span> Heading<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>标题元素中仅Important为红色，其他为默认黑色</p>
</blockquote>
<h1 id="HTML脚本"><a href="#HTML脚本" class="headerlink" title="HTML脚本"></a>HTML脚本</h1><p><code>&lt;script&gt;</code> 标签用于定义客户端脚本，比如 JavaScript。</p>
<p>script 元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。</p>
<p>必需的 type 属性规定脚本的 MIME 类型。</p>
<p>JavaScript 最常用于图片操作、表单验证以及内容动态更新。</p>
<p>下面的脚本会向浏览器输出“Hello World!”：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;Hello World!&quot;</span>)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>&lt;noscript&gt;</code> 标签提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。</p>
<p>noscript 元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素。</p>
<p>只有在浏览器不支持脚本或者禁用脚本时，才会显示 noscript 元素中的内容：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;Hello World!&quot;</span>)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span>Your browser does not support JavaScript!<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h1 id="HTML头部元素"><a href="#HTML头部元素" class="headerlink" title="HTML头部元素"></a>HTML头部元素</h1><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p><code>&lt;head&gt;</code> 元素是所有头部元素的容器。<code>&lt;head&gt;</code> 内的元素可包含脚本，指示浏览器在何处可以找到样式表，提供元信息，等等。</p>
<p>以下标签都可以添加到 head 部分：<code>&lt;title&gt;、&lt;base&gt;、&lt;link&gt;、&lt;meta&gt;、&lt;script&gt; 以及 &lt;style&gt;</code>。</p>
<p>下面介绍所有可能出现到head部分的元素，部分已经了解过</p>
<h2 id="title"><a href="#title" class="headerlink" title="title"></a>title</h2><p><code>&lt;title&gt;</code> 标签定义文档的标题。</p>
<p>title 元素在所有 HTML/XHTML 文档中都是必需的。</p>
<p>title 元素能够：</p>
<ul>
<li>定义浏览器工具栏中的标题</li>
<li>提供页面被添加到收藏夹时显示的标题</li>
<li>显示在搜索引擎结果中的页面标题</li>
</ul>
<p>一个简化的 HTML 文档：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Title of the document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">The content of the document......</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h2 id="base"><a href="#base" class="headerlink" title="base"></a>base</h2><p><code>&lt;base&gt;</code> 标签为页面上的所有链接规定默认地址或默认目标（target）：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;http://www.w3school.com.cn/images/&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>&lt;base&gt;</code>无结束标签</p>
<h2 id="link"><a href="#link" class="headerlink" title="link"></a>link</h2><p><code>&lt;link&gt;</code> 标签定义文档与外部资源之间的关系。</p>
<p><code>&lt;link&gt;</code> 标签最常用于连接样式表：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;mystyle.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="style"><a href="#style" class="headerlink" title="style"></a>style</h2><p><code>&lt;style&gt;</code> 标签用于为 HTML 文档定义样式信息。</p>
<p>可以在 style 元素内规定 HTML 元素在浏览器中呈现的样式：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>:yellow&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:blue&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="meta"><a href="#meta" class="headerlink" title="meta"></a>meta</h2><p>元数据（metadata）是关于数据的信息。</p>
<p><code>&lt;meta&gt;</code> 标签提供关于 HTML 文档的元数据。元数据不会显示在页面上，但是对于机器是可读的。</p>
<p>典型的情况是，meta 元素被用于规定页面的描述、关键词、文档的作者、最后修改时间以及其他元数据。</p>
<p><code>&lt;meta&gt;</code> 标签始终位于 head 元素中。</p>
<p>元数据可用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他 web 服务。</p>
<p>一些搜索引擎会利用 meta 元素的 name 和 content 属性来索引 页面。</p>
<p>下面的 meta 元素定义页面的描述：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Free Web tutorials on HTML, CSS, XML&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>下面的 meta 元素定义页面的关键词：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;HTML, CSS, XML&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>name 和 content 属性的作用是描述页面的内容。</p>
<h2 id="script"><a href="#script" class="headerlink" title="script"></a>script</h2><p><code>&lt;script&gt;</code> 标签用于定义客户端脚本，比如 JavaScript。</p>
<h1 id="HTML-lt-DOCTYPE-gt"><a href="#HTML-lt-DOCTYPE-gt" class="headerlink" title="HTML &lt;!DOCTYPE&gt;"></a>HTML &lt;!DOCTYPE&gt;</h1><p><code>&lt;!DOCTYPE&gt;</code> 声明帮助浏览器正确地显示网页。</p>
<p>Web 世界中存在许多不同的文档。只有了解文档的类型，浏览器才能正确地显示文档。</p>
<p>HTML 也有多个不同的版本，只有完全明白页面中使用的确切 HTML 版本，浏览器才能完全正确地显示出 HTML 页面。这就是 <code>&lt;!DOCTYPE&gt;</code> 的用处。</p>
<p><code>&lt;!DOCTYPE&gt;</code> 不是 HTML 标签。它为浏览器提供一项信息（声明），即 HTML 是用什么版本编写的</p>
<p>带有 HTML5 DOCTYPE 的 HTML 文档：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title of the document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">The content of the document......</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>常见的声明总结：</p>
<p>HTML5</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>HTML 4.01</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>XHTML 1.0</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h1 id="HTML标签参考手册"><a href="#HTML标签参考手册" class="headerlink" title="HTML标签参考手册"></a>HTML标签参考手册</h1><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;!DOCTYPE&gt;</code></td>
<td align="left">定义文档类型</td>
</tr>
<tr>
<td align="left"><code>&lt;html&gt;</code></td>
<td align="left">定义 HTML 文档。</td>
</tr>
<tr>
<td align="left"><code>&lt;title&gt;</code></td>
<td align="left">定义文档标题</td>
</tr>
<tr>
<td align="left"><code>&lt;body&gt;</code></td>
<td align="left">定义文档的主体。</td>
</tr>
<tr>
<td align="left"><code>&lt;h1&gt;</code> to <code>&lt;h6&gt;</code></td>
<td align="left">定义 HTML 标题</td>
</tr>
<tr>
<td align="left"><code>&lt;hr /&gt;</code></td>
<td align="left">定义水平线。</td>
</tr>
<tr>
<td align="left"><code>&lt;!--...--&gt;</code></td>
<td align="left">定义注释。</td>
</tr>
<tr>
<td align="left"><code>&lt;p&gt;</code></td>
<td align="left">定义段落</td>
</tr>
<tr>
<td align="left"><code>&lt;br /&gt;</code></td>
<td align="left">插入换行</td>
</tr>
</tbody></table>
<h2 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;acronym&gt;</code></td>
<td align="left">定义只取首字母缩写</td>
</tr>
<tr>
<td align="left"><code>&lt;abbr&gt;</code></td>
<td align="left">定义缩写</td>
</tr>
<tr>
<td align="left"><code>&lt;address&gt;</code></td>
<td align="left">定义地址</td>
</tr>
<tr>
<td align="left"><code>&lt;b&gt;</code></td>
<td align="left">定义粗体文本</td>
</tr>
<tr>
<td align="left"><code>&lt;bdo&gt;</code></td>
<td align="left">定义文字方向</td>
</tr>
<tr>
<td align="left"><code>&lt;big&gt;</code></td>
<td align="left">定义大号字</td>
</tr>
<tr>
<td align="left"><code>&lt;blockquote&gt;</code></td>
<td align="left">定义长的引用</td>
</tr>
<tr>
<td align="left"><code>&lt;cite&gt;</code></td>
<td align="left">定义引用(citation)</td>
</tr>
<tr>
<td align="left"><code>&lt;del&gt;</code></td>
<td align="left">定义删除字</td>
</tr>
<tr>
<td align="left"><code>&lt;dfn&gt;</code></td>
<td align="left">定义一个定义项目</td>
</tr>
<tr>
<td align="left"><code>&lt;em&gt;</code></td>
<td align="left">定义着重文字</td>
</tr>
<tr>
<td align="left"><code>&lt;i&gt;</code></td>
<td align="left">定义斜体字</td>
</tr>
<tr>
<td align="left"><code>&lt;ins&gt;</code></td>
<td align="left">定义插入字</td>
</tr>
<tr>
<td align="left"><code>&lt;pre&gt;</code></td>
<td align="left">定义预格式文本</td>
</tr>
<tr>
<td align="left"><code>&lt;q&gt;</code></td>
<td align="left">定义短的引用语</td>
</tr>
<tr>
<td align="left"><code>&lt;small&gt;</code></td>
<td align="left">定义小号字</td>
</tr>
<tr>
<td align="left"><code>&lt;strong&gt;</code></td>
<td align="left">定义加重语气</td>
</tr>
<tr>
<td align="left"><code>&lt;sub&gt;</code></td>
<td align="left">定义下标字</td>
</tr>
<tr>
<td align="left"><code>&lt;sup&gt;</code></td>
<td align="left">定义上标字</td>
</tr>
<tr>
<td align="left"><code>&lt;tt&gt;</code></td>
<td align="left">定义打字机代码</td>
</tr>
</tbody></table>
<h2 id="计算机输出标签"><a href="#计算机输出标签" class="headerlink" title="计算机输出标签"></a>计算机输出标签</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;code&gt;</code></td>
<td align="left">定义计算机代码文本</td>
</tr>
<tr>
<td align="left"><code>&lt;kbd&gt;</code></td>
<td align="left">定义键盘码</td>
</tr>
<tr>
<td align="left"><code>&lt;samp&gt;</code></td>
<td align="left">定义计算机代码样本。</td>
</tr>
<tr>
<td align="left"><code>&lt;var&gt;</code></td>
<td align="left">定义变量。</td>
</tr>
</tbody></table>
<h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;form&gt;</code></td>
<td align="left">定义供用户输入的 HTML 表单。</td>
</tr>
<tr>
<td align="left"><code>&lt;input&gt;</code></td>
<td align="left">定义输入控件。</td>
</tr>
<tr>
<td align="left"><code>&lt;textarea&gt;</code></td>
<td align="left">定义多行的文本输入控件。</td>
</tr>
<tr>
<td align="left"><code>&lt;button&gt;</code></td>
<td align="left">定义按钮。</td>
</tr>
<tr>
<td align="left"><code>&lt;select&gt;</code></td>
<td align="left">定义选择列表（下拉列表）。</td>
</tr>
<tr>
<td align="left"><code>&lt;optgroup&gt;</code></td>
<td align="left">定义选择列表中相关选项的组合。</td>
</tr>
<tr>
<td align="left"><code>&lt;option&gt;</code></td>
<td align="left">定义选择列表中的选项。</td>
</tr>
<tr>
<td align="left"><code>&lt;label&gt;</code></td>
<td align="left">定义 input 元素的标注。</td>
</tr>
<tr>
<td align="left"><code>&lt;fieldset&gt;</code></td>
<td align="left">定义围绕表单中元素的边框。</td>
</tr>
<tr>
<td align="left"><code>&lt;legend&gt;</code></td>
<td align="left">定义 fieldset 元素的标题。</td>
</tr>
<tr>
<td align="left"><code>&lt;inindex&gt;</code></td>
<td align="left">不赞成使用。定义与文档相关的可搜索索引。</td>
</tr>
<tr>
<td align="left"><code>&lt;datalist&gt;</code></td>
<td align="left">定义下拉列表。</td>
</tr>
<tr>
<td align="left"><code>&lt;keygen&gt;</code></td>
<td align="left">定义生成密钥。</td>
</tr>
<tr>
<td align="left"><code>&lt;output&gt;</code></td>
<td align="left">定义输出的一些类型。</td>
</tr>
</tbody></table>
<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;frame&gt;</code></td>
<td align="left">定义框架集的窗口或框架。</td>
</tr>
<tr>
<td align="left"><code>&lt;frameset&gt;</code></td>
<td align="left">定义框架集。</td>
</tr>
<tr>
<td align="left"><code>&lt;noframes&gt;</code></td>
<td align="left">定义针对不支持框架的用户的替代内容。</td>
</tr>
<tr>
<td align="left"><code>&lt;iframe&gt;</code></td>
<td align="left">定义内联框架。</td>
</tr>
</tbody></table>
<h2 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;img&gt;</code></td>
<td align="left">定义图像。</td>
</tr>
<tr>
<td align="left"><code>&lt;map&gt;</code></td>
<td align="left">定义图像映射。</td>
</tr>
<tr>
<td align="left"><code>&lt;area&gt;</code></td>
<td align="left">定义图像地图内部的区域。</td>
</tr>
<tr>
<td align="left"><code>&lt;canvas&gt;</code></td>
<td align="left">定义图形。</td>
</tr>
<tr>
<td align="left"><code>&lt;figcaption&gt;</code></td>
<td align="left">定义 figure 元素的标题。</td>
</tr>
<tr>
<td align="left"><code>&lt;figure&gt;</code></td>
<td align="left">定义媒介内容的分组，以及它们的标题。</td>
</tr>
</tbody></table>
<h2 id="音-视频"><a href="#音-视频" class="headerlink" title="音/视频"></a>音/视频</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;audio&gt;</code></td>
<td align="left">定义声音内容。</td>
</tr>
<tr>
<td align="left"><code>&lt;source&gt;</code></td>
<td align="left">定义媒介源。</td>
</tr>
<tr>
<td align="left"><code>&lt;track&gt;</code></td>
<td align="left">定义用在媒体播放器中的文本轨道。</td>
</tr>
<tr>
<td align="left"><code>&lt;video&gt;</code></td>
<td align="left">定义视频。</td>
</tr>
</tbody></table>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;a&gt;</code></td>
<td align="left">定义超链接</td>
</tr>
<tr>
<td align="left"><code>&lt;link&gt;</code></td>
<td align="left">定义文档与外部资源的关系。</td>
</tr>
<tr>
<td align="left"><code>&lt;nav&gt;</code></td>
<td align="left">定义导航链接。</td>
</tr>
</tbody></table>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;ul&gt;</code></td>
<td align="left">定义无序列表。</td>
</tr>
<tr>
<td align="left"><code>&lt;ol&gt;</code></td>
<td align="left">定义有序列表。</td>
</tr>
<tr>
<td align="left"><code>&lt;li&gt;</code></td>
<td align="left">定义列表的项目。</td>
</tr>
<tr>
<td align="left"><code>&lt;dir&gt;</code></td>
<td align="left">不赞成使用。定义目录列表。</td>
</tr>
<tr>
<td align="left"><code>&lt;dl&gt;</code></td>
<td align="left">定义定义列表。</td>
</tr>
<tr>
<td align="left"><code>&lt;dt&gt;</code></td>
<td align="left">定义定义列表中的项目。</td>
</tr>
<tr>
<td align="left"><code>&lt;dd&gt;</code></td>
<td align="left">定义定义列表中项目的描述。</td>
</tr>
<tr>
<td align="left"><code>&lt;menu&gt;</code></td>
<td align="left">定义命令的菜单/列表。</td>
</tr>
<tr>
<td align="left"><code>&lt;menuitem&gt;</code></td>
<td align="left">定义用户可以从弹出菜单调用的命令/菜单项目。</td>
</tr>
<tr>
<td align="left"><code>&lt;command&gt;</code></td>
<td align="left">定义命令按钮。</td>
</tr>
</tbody></table>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;table&gt;</code></td>
<td align="left">定义表格</td>
</tr>
<tr>
<td align="left"><code>&lt;caption&gt;</code></td>
<td align="left">定义表格标题。</td>
</tr>
<tr>
<td align="left"><code>&lt;th&gt;</code></td>
<td align="left">定义表格中的表头单元格。</td>
</tr>
<tr>
<td align="left"><code>&lt;tr&gt;</code></td>
<td align="left">定义表格中的行。</td>
</tr>
<tr>
<td align="left"><code>&lt;td&gt;</code></td>
<td align="left">定义表格中的单元。</td>
</tr>
<tr>
<td align="left"><code>thead</code></td>
<td align="left">定义表格中的表头内容。</td>
</tr>
<tr>
<td align="left"><code>&lt;tbody&gt;</code></td>
<td align="left">定义表格中的主体内容。</td>
</tr>
<tr>
<td align="left"><code>&lt;tfoot&gt;</code></td>
<td align="left">定义表格中的表注内容（脚注）。</td>
</tr>
<tr>
<td align="left"><code>&lt;col&gt;</code></td>
<td align="left">定义表格中一个或多个列的属性值。</td>
</tr>
<tr>
<td align="left"><code>&lt;colgroup&gt;</code></td>
<td align="left">定义表格中供格式化的列组。</td>
</tr>
</tbody></table>
<h2 id="样式-节"><a href="#样式-节" class="headerlink" title="样式/节"></a>样式/节</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;style&gt;</code></td>
<td align="left">定义文档的样式信息。</td>
</tr>
<tr>
<td align="left"><code>&lt;div&gt;</code></td>
<td align="left">定义文档中的节。</td>
</tr>
<tr>
<td align="left"><code>&lt;span&gt;</code></td>
<td align="left">定义文档中的节。</td>
</tr>
<tr>
<td align="left"><code>&lt;header&gt;</code></td>
<td align="left">定义 section 或 page 的页眉。</td>
</tr>
<tr>
<td align="left"><code>&lt;footer&gt;</code></td>
<td align="left">定义 section 或 page 的页脚。</td>
</tr>
<tr>
<td align="left"><code>&lt;section&gt;</code></td>
<td align="left">定义 section。</td>
</tr>
<tr>
<td align="left"><code>&lt;article&gt;</code></td>
<td align="left">定义文章。</td>
</tr>
<tr>
<td align="left"><code>&lt;aside&gt;</code></td>
<td align="left">定义页面内容之外的内容。</td>
</tr>
<tr>
<td align="left"><code>&lt;details&gt;</code></td>
<td align="left">定义元素的细节。</td>
</tr>
<tr>
<td align="left"><code>&lt;dialog&gt;</code></td>
<td align="left">定义对话框或窗口。</td>
</tr>
<tr>
<td align="left"><code>&lt;summary&gt;</code></td>
<td align="left">为 <code>&lt;details&gt; </code>元素定义可见的标题。</td>
</tr>
</tbody></table>
<h2 id="元信息"><a href="#元信息" class="headerlink" title="元信息"></a>元信息</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;head&gt;</code></td>
<td align="left">定义关于文档的信息。</td>
</tr>
<tr>
<td align="left"><code>&lt;meta&gt;</code></td>
<td align="left">定义关于 HTML 文档的元信息。</td>
</tr>
<tr>
<td align="left"><code>&lt;base&gt;</code></td>
<td align="left">定义页面中所有链接的默认地址或默认目标。</td>
</tr>
</tbody></table>
<h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><table>
<thead>
<tr>
<th align="left">标签</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>&lt;script&gt;</code></td>
<td align="left">定义客户端脚本。</td>
</tr>
<tr>
<td align="left"><code>&lt;noscript&gt;</code></td>
<td align="left">定义针对不支持客户端脚本的用户的替代内容。</td>
</tr>
<tr>
<td align="left"><code>&lt;applet&gt;</code></td>
<td align="left">不赞成使用。定义嵌入的 applet。</td>
</tr>
<tr>
<td align="left"><code>&lt;embed&gt;</code></td>
<td align="left">为外部应用程序（非 HTML）定义容器。</td>
</tr>
<tr>
<td align="left"><code>&lt;object&gt;</code></td>
<td align="left">定义嵌入的对象。</td>
</tr>
<tr>
<td align="left"><code>&lt;param&gt;</code></td>
<td align="left">定义对象的参数。</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>git学习</title>
    <url>/2020/11/13/git%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>git操作基础命令介绍</p>
<a id="more"></a>

<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1>]]></content>
  </entry>
  <entry>
    <title>Hexo基础</title>
    <url>/2020/11/13/Hexo%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>Hexo基础知识介绍</p>
<a id="more"></a>

<h1 id="Hexo目录结构"><a href="#Hexo目录结构" class="headerlink" title="Hexo目录结构"></a>Hexo目录结构</h1><p>新建完成后，指定文件夹的目录如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<p><strong><em>_config.yml</em></strong></p>
<p>网站的 <a href="https://hexo.io/zh-cn/docs/configuration">配置</a> 信息，可以在此配置大部分的参数。</p>
<p><strong><em>package.json</em></strong></p>
<p>应用程序的信息。<a href="https://ejs.co/">EJS</a>, <a href="http://learnboost.github.io/stylus/">Stylus</a> 和 <a href="http://daringfireball.net/projects/markdown/">Markdown</a> renderer 已默认安装，可以自由移除。</p>
<blockquote>
<p>package.json文件内容</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;hexo-site&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;private&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;build&quot;</span>: <span class="string">&quot;hexo generate&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;clean&quot;</span>: <span class="string">&quot;hexo clean&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;deploy&quot;</span>: <span class="string">&quot;hexo deploy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;server&quot;</span>: <span class="string">&quot;hexo server&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;5.2.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span>: <span class="string">&quot;^5.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-deployer-git&quot;</span>: <span class="string">&quot;^2.1.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;</span>: <span class="string">&quot;^1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;</span>: <span class="string">&quot;^1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-generator-index&quot;</span>: <span class="string">&quot;^2.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;</span>: <span class="string">&quot;^1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;</span>: <span class="string">&quot;^1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span>: <span class="string">&quot;^3.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-renderer-pug&quot;</span>: <span class="string">&quot;^1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span>: <span class="string">&quot;^2.0.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span>: <span class="string">&quot;^2.0.0&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong><em>scaffolds</em></strong></p>
<p><a href="https://hexo.io/zh-cn/docs/writing">模版</a> 文件夹。新建文章时，Hexo 会根据 scaffold 来建立文件。Hexo的模板是指在新建的文章文件中默认填充的内容。</p>
<p>例如，如果修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>
<p><strong><em>source</em></strong></p>
<p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p>
<p><strong><em>themes</em></strong></p>
<p><a href="https://hexo.io/zh-cn/docs/themes">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。</p>
<h1 id="hexo-配置"><a href="#hexo-配置" class="headerlink" title="hexo 配置"></a>hexo 配置</h1><p> <code>_config.yml</code> 中修改大部分的配置</p>
<ul>
<li>Site</li>
</ul>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>title</code></td>
<td align="left">网站标题</td>
</tr>
<tr>
<td align="left"><code>subtitle</code></td>
<td align="left">网站副标题</td>
</tr>
<tr>
<td align="left"><code>description</code></td>
<td align="left">网站描述</td>
</tr>
<tr>
<td align="left"><code>keywords</code></td>
<td align="left">网站的关键词。支持多个关键词。</td>
</tr>
<tr>
<td align="left"><code>author</code></td>
<td align="left">您的名字</td>
</tr>
<tr>
<td align="left"><code>language</code></td>
<td align="left">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 <code>zh-Hans</code>和 <code>zh-CN</code>。</td>
</tr>
<tr>
<td align="left"><code>timezone</code></td>
<td align="left">网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td>
</tr>
</tbody></table>
<p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/11/11/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>!</p>
<a id="more"></a>

<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
